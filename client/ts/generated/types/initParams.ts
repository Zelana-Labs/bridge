/**
 * This code was AUTOGENERATED using the codama library.
 * Please DO NOT EDIT THIS FILE, instead use visitors
 * to add features, then rerun codama to update it.
 *
 * @see https://github.com/codama-idl/codama
 */

import {
  combineCodec,
  getAddressDecoder,
  getAddressEncoder,
  getArrayDecoder,
  getArrayEncoder,
  getStructDecoder,
  getStructEncoder,
  getU8Decoder,
  getU8Encoder,
  type Address,
  type FixedSizeCodec,
  type FixedSizeDecoder,
  type FixedSizeEncoder,
} from '@solana/kit';

export type InitParams = { sequencerAuthority: Address; domain: Array<number> };

export type InitParamsArgs = InitParams;

export function getInitParamsEncoder(): FixedSizeEncoder<InitParamsArgs> {
  return getStructEncoder([
    ['sequencerAuthority', getAddressEncoder()],
    ['domain', getArrayEncoder(getU8Encoder(), { size: 32 })],
  ]);
}

export function getInitParamsDecoder(): FixedSizeDecoder<InitParams> {
  return getStructDecoder([
    ['sequencerAuthority', getAddressDecoder()],
    ['domain', getArrayDecoder(getU8Decoder(), { size: 32 })],
  ]);
}

export function getInitParamsCodec(): FixedSizeCodec<
  InitParamsArgs,
  InitParams
> {
  return combineCodec(getInitParamsEncoder(), getInitParamsDecoder());
}
